name: Lint and Test

on:
  pull_request:
    branches:
      - main
  workflow_dispatch: # This allows manual triggering of the workflow


jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Go environment with caching
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.23.0'
          cache: true

      # Cache Go modules to speed up builds
      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Install dependencies
      - name: Install Dependencies
        run: go mod download

      # Install goimports (required by pre-commit hooks)
      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      # Run pre-commit hooks
      - name: Run Pre-Commit Hooks
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files

      # Run Go tests with coverage
      - name: Run Go Tests
        run: |
          go install golang.org/x/tools/cmd/cover@latest
          go test -cover -race -timeout=10m ./...

      # Run golangci-lint for static analysis
      - name: Run GolangCI-Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=10m --out-format colored-line-number

      # Build the release (snapshot mode for testing)
      - name: Build with GoReleaser (Snapshot)
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: build --skip=before --skip=validate --snapshot
